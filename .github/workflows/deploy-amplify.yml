name: Deploy to AWS Amplify

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - 'public-tests/**'
      - 'shared/**'
      - 'backendV2/**'
      - '.github/workflows/deploy-amplify.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'public-tests/**'
      - 'shared/**'

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-east-1'

jobs:
  # Detectar cambios para optimizar despliegues
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      public-tests-changed: ${{ steps.changes.outputs.public-tests }}
      shared-changed: ${{ steps.changes.outputs.shared }}
      backend-changed: ${{ steps.changes.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
            public-tests:
              - 'public-tests/**'
            shared:
              - 'shared/**'
            backend:
              - 'backendV2/**'

  # Configuraci√≥n inicial com√∫n
  setup:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: github.event_name == 'push' && (needs.detect-changes.outputs.frontend-changed == 'true' || needs.detect-changes.outputs.public-tests-changed == 'true' || needs.detect-changes.outputs.shared-changed == 'true' || needs.detect-changes.outputs.backend-changed == 'true')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update Amplify URLs and export endpoints
        if: needs.detect-changes.outputs.backend-changed == 'true'
        run: |
          echo "üîÑ Actualizando configuraci√≥n de Amplify..."
          chmod +x scripts/get-amplify-urls.sh
          ./scripts/get-amplify-urls.sh
          
          echo "üì§ Exportando endpoints..."
          cd backendV2
          npm install
          npm run export-endpoints
          npx ts-node src/utils/endpoints-exporter.ts ../public-tests/src/config/endpoints.js

  # Despliegue del Frontend
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [detect-changes, setup]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && (needs.detect-changes.outputs.frontend-changed == 'true' || needs.detect-changes.outputs.shared-changed == 'true')
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Frontend to Amplify
        run: |
          echo "üöÄ Desplegando Frontend..."
          if [ -z "${{ secrets.AMPLIFY_FRONTEND_APP_ID }}" ]; then
            echo "‚ö†Ô∏è Warning: AMPLIFY_FRONTEND_APP_ID no est√° configurado, saltando deployment"
            echo "üîß Configura el secret AMPLIFY_FRONTEND_APP_ID en GitHub para habilitar deployments"
          else
            aws amplify start-job \
              --app-id ${{ secrets.AMPLIFY_FRONTEND_APP_ID }} \
              --branch-name main \
              --job-type RELEASE
            echo "üì± Frontend: https://d12psv9dnscmm4.amplifyapp.com"
          fi

  # Despliegue de Public Tests
  deploy-public-tests:
    runs-on: ubuntu-latest
    needs: [detect-changes, setup]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && (needs.detect-changes.outputs.public-tests-changed == 'true' || needs.detect-changes.outputs.shared-changed == 'true')
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Public Tests to Amplify
        run: |
          echo "üöÄ Desplegando Public Tests..."
          if [ -z "${{ secrets.AMPLIFY_PUBLIC_TESTS_APP_ID }}" ]; then
            echo "‚ö†Ô∏è Warning: AMPLIFY_PUBLIC_TESTS_APP_ID no est√° configurado, saltando deployment"
            echo "üîß Configura el secret AMPLIFY_PUBLIC_TESTS_APP_ID en GitHub para habilitar deployments"
          else
            aws amplify start-job \
              --app-id ${{ secrets.AMPLIFY_PUBLIC_TESTS_APP_ID }} \
              --branch-name main \
              --job-type RELEASE
            echo "üì± Public Tests: https://d2vbj9lxdnqvqq.amplifyapp.com"
          fi

  # Notificaci√≥n final
  notify-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-public-tests]
    if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deployment Summary
        run: |
          echo "üéØ Resumen del Despliegue:"
          echo "Frontend: ${{ needs.deploy-frontend.result }}"
          echo "Public Tests: ${{ needs.deploy-public-tests.result }}"
          
          if [ "${{ needs.deploy-frontend.result }}" == "success" ] || [ "${{ needs.deploy-public-tests.result }}" == "success" ]; then
            echo "‚úÖ Al menos un despliegue fue exitoso!"
            echo "üåê URLs de acceso:"
            echo "Frontend: https://d12psv9dnscmm4.amplifyapp.com"
            echo "Public Tests: https://d2vbj9lxdnqvqq.amplifyapp.com"
          else
            echo "‚ùå Todos los despliegues fallaron!"
            exit 1
          fi
