name: Deploy Frontend to AWS Amplify

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - 'shared/**'
      - '.github/workflows/deploy-frontend-amplify.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'shared/**'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Forzar despliegue completo'
        required: false
        default: 'false'
        type: boolean

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-east-1'

jobs:
  # Detectar cambios
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      shared-changed: ${{ steps.changes.outputs.shared }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
            shared:
              - 'shared/**'

  # Configuraci√≥n inicial
  setup:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: github.event_name == 'push' && (needs.detect-changes.outputs.frontend-changed == 'true' || needs.detect-changes.outputs.shared-changed == 'true') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify AWS credentials
        run: |
          echo "üîç Verificando credenciales de AWS..."
          aws sts get-caller-identity
          echo "‚úÖ Credenciales verificadas"

      - name: Verify Amplify app exists
        run: |
          echo "üîç Verificando aplicaci√≥n de Amplify..."
          if [ -z "${{ secrets.AMPLIFY_FRONTEND_APP_ID }}" ]; then
            echo "‚ùå AMPLIFY_FRONTEND_APP_ID no est√° configurado"
            exit 1
          fi

          aws amplify get-app --app-id ${{ secrets.AMPLIFY_FRONTEND_APP_ID }} --region ${{ env.AWS_REGION }}
          echo "‚úÖ Aplicaci√≥n de Amplify verificada"

  # Build y test del frontend
  build-frontend:
    runs-on: ubuntu-latest
    needs: setup
    if: github.event_name == 'push' && (needs.detect-changes.outputs.frontend-changed == 'true' || needs.detect-changes.outputs.shared-changed == 'true') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd frontend
          echo "üì¶ Instalando dependencias..."
          npm ci
          echo "‚úÖ Dependencias instaladas"

      - name: Run linting
        run: |
          cd frontend
          echo "üîç Ejecutando linting..."
          npm run lint:check
          echo "‚úÖ Linting completado"

      - name: Build frontend
        run: |
          cd frontend
          echo "üèóÔ∏è Construyendo frontend..."
          npm run build
          echo "‚úÖ Build completado"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/.next
          retention-days: 1

  # Despliegue a Amplify
  deploy-to-amplify:
    runs-on: ubuntu-latest
    needs: [setup, build-frontend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && (needs.detect-changes.outputs.frontend-changed == 'true' || needs.detect-changes.outputs.shared-changed == 'true') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Amplify
        run: |
          echo "üöÄ Iniciando despliegue a AWS Amplify..."

          # Obtener informaci√≥n de la aplicaci√≥n
          APP_INFO=$(aws amplify get-app --app-id ${{ secrets.AMPLIFY_FRONTEND_APP_ID }} --region ${{ env.AWS_REGION }})
          APP_NAME=$(echo "$APP_INFO" | jq -r '.app.name')
          APP_DOMAIN=$(echo "$APP_INFO" | jq -r '.app.domain')

          echo "üì± Aplicaci√≥n: $APP_NAME"
          echo "üåê Dominio: $APP_DOMAIN"

          # Iniciar job de despliegue
          JOB_ID=$(aws amplify start-job \
            --app-id ${{ secrets.AMPLIFY_FRONTEND_APP_ID }} \
            --branch-name main \
            --job-type RELEASE \
            --region ${{ env.AWS_REGION }} \
            --query 'jobSummary.jobId' \
            --output text)

          echo "üîÑ Job ID: $JOB_ID"

          # Esperar a que termine el despliegue
          echo "‚è≥ Esperando que termine el despliegue..."
          aws amplify wait job-complete \
            --app-id ${{ secrets.AMPLIFY_FRONTEND_APP_ID }} \
            --branch-name main \
            --job-id "$JOB_ID" \
            --region ${{ env.AWS_REGION }}

          # Obtener estado del job
          JOB_STATUS=$(aws amplify get-job \
            --app-id ${{ secrets.AMPLIFY_FRONTEND_APP_ID }} \
            --branch-name main \
            --job-id "$JOB_ID" \
            --region ${{ env.AWS_REGION }} \
            --query 'job.summary.status' \
            --output text)

          echo "üìä Estado del despliegue: $JOB_STATUS"

          if [ "$JOB_STATUS" = "SUCCEED" ]; then
            echo "‚úÖ Despliegue exitoso!"
            echo "üåê URL: https://main.$APP_DOMAIN.amplifyapp.com"
          else
            echo "‚ùå Despliegue fall√≥ con estado: $JOB_STATUS"
            exit 1
          fi

  # Actualizaci√≥n de endpoints (si hay cambios en backend)
  update-endpoints:
    runs-on: ubuntu-latest
    needs: deploy-to-amplify
    if: always() && github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update endpoints in Amplify
        run: |
          echo "üîÑ Actualizando endpoints en Amplify..."
          chmod +x scripts/update-endpoints-all-deployments.sh
          ./scripts/update-endpoints-all-deployments.sh
        env:
          STAGE: dev
          AWS_REGION: ${{ env.AWS_REGION }}
          AMPLIFY_FRONTEND_APP_ID: ${{ secrets.AMPLIFY_FRONTEND_APP_ID }}
          AMPLIFY_PUBLIC_TESTS_APP_ID: ${{ secrets.AMPLIFY_PUBLIC_TESTS_APP_ID }}

  # Notificaci√≥n final
  notify-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-to-amplify, update-endpoints]
    if: always() && github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Deployment Summary
        run: |
          echo "üéØ Resumen del Despliegue Frontend a Amplify:"
          echo "Deploy: ${{ needs.deploy-to-amplify.result }}"
          echo "Update Endpoints: ${{ needs.update-endpoints.result }}"

          if [ "${{ needs.deploy-to-amplify.result }}" == "success" ]; then
            echo "‚úÖ Despliegue exitoso!"
            echo "üåê URL: https://main.${{ secrets.AMPLIFY_FRONTEND_APP_ID }}.amplifyapp.com"
          else
            echo "‚ùå Despliegue fall√≥!"
            exit 1
          fi
