name: Deploy Frontend

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - 'shared/**'
      - '.github/workflows/deploy-frontend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'shared/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-east-1'

jobs:
  # Detectar cambios
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      shared-changed: ${{ steps.changes.outputs.shared }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
            shared:
              - 'shared/**'

  # Configuraci√≥n y build del frontend
  build-frontend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: github.event_name == 'push' && (needs.detect-changes.outputs.frontend-changed == 'true' || needs.detect-changes.outputs.shared-changed == 'true')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd frontend
          npm ci --legacy-peer-deps

      - name: Build application
        run: |
          cd frontend
          npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_PUBLIC_TESTS_URL: ${{ secrets.NEXT_PUBLIC_PUBLIC_TESTS_URL }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/.next
          retention-days: 1

  # Despliegue a Vercel (recomendado para Next.js)
  deploy-vercel:
    runs-on: ubuntu-latest
    needs: build-frontend
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd frontend
          npm ci --legacy-peer-deps

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  # Despliegue alternativo a AWS S3 (fallback)
  deploy-s3:
    runs-on: ubuntu-latest
    needs: build-frontend
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/.next

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        run: |
          BUCKET_NAME="emotioxv2-frontend-${{ github.sha }}"
          echo "Deploying to S3 bucket: $BUCKET_NAME"

          # Create bucket
          aws s3 mb s3://$BUCKET_NAME --region ${{ env.AWS_REGION }}

          # Upload files
          aws s3 sync frontend/.next s3://$BUCKET_NAME --delete

          # Configure static website
          aws s3 website s3://$BUCKET_NAME --index-document index.html --error-document 404.html

          echo "Frontend deployed to: http://$BUCKET_NAME.s3-website-${{ env.AWS_REGION }}.amazonaws.com"

  # Notificaci√≥n de despliegue
  notify:
    runs-on: ubuntu-latest
    needs: [deploy-vercel, deploy-s3]
    if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deployment Summary
        run: |
          echo "üéØ Frontend Deployment Summary:"
          echo "Vercel: ${{ needs.deploy-vercel.result }}"
          echo "S3: ${{ needs.deploy-s3.result }}"

          if [ "${{ needs.deploy-vercel.result }}" == "success" ]; then
            echo "‚úÖ Frontend deployed successfully to Vercel!"
            echo "üåê URL: https://emotioxv2-frontend.vercel.app"
          elif [ "${{ needs.deploy-s3.result }}" == "success" ]; then
            echo "‚úÖ Frontend deployed successfully to S3!"
          else
            echo "‚ùå Frontend deployment failed!"
            exit 1
          fi
