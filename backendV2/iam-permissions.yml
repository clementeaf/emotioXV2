# Permisos IAM para serverless.yml

role:
  statements:
    # Permisos CRUD para TODAS las tablas DynamoDB de este servicio/etapa
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource:
        # ARN para TODAS las tablas de este servicio/etapa usando comodín '*'. Usamos Fn::Sub aquí.
        # Esto cubrirá las tablas cuyos nombres son como: emotioxv2-backend-<nombretabla>-dev
        - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:service}-*-${self:provider.stage}
        # ARN para TODOS los índices de esas tablas
        - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:service}-*-${self:provider.stage}/index/*

        # Las líneas explícitas para "ModuleResponses" literal se eliminan ya que ahora usamos una variable de entorno
        # y la tabla se crea con un nombre basado en el servicio y la etapa.
        # La regla genérica de arriba debería cubrir la nueva tabla ${self:provider.environment.MODULE_RESPONSES_TABLE}
        # si sigue el patrón ${self:service}-<algo>-${self:provider.stage},
        # que es el caso con ${self:service}-module-responses-${self:provider.stage}.

        # Tablas específicas (construidas manualmente para funcionar con recursos existentes)
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-researches-dev"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-researches-dev/index/researchId-index"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-researches-dev/index/EntityTypeSkIndex"
        
        # Tabla de usuarios con EmailIndex
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-users-dev"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-users-dev/index/EmailIndex"
        
        # Tabla de participantes con EmailIndex
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-participants-dev"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-participants-dev/index/EmailIndex"
        
        # Tabla de module responses con índices
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-module-responses-dev"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-module-responses-dev/index/ResearchParticipantIndex"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-module-responses-dev/index/ResearchIndex"
        
        # Tabla de quota records
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-quota-records-dev"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-quota-records-dev/index/ResearchIdIndex"
        
        # Tablas de eye tracking
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-eye-tracking-recruit-config-dev"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-eye-tracking-recruit-config-dev/index/GSI1"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-eye-tracking-recruit-participant-dev"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-eye-tracking-recruit-participant-dev/index/GSI1"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-eye-tracking-recruit-participant-dev/index/GSI2"
        
        # Tabla de recruitment links
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-recruitment-link-dev"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-recruitment-link-dev/index/GSI1"
        - "arn:aws:dynamodb:us-east-1:041238861016:table/emotioxv2-backend-recruitment-link-dev/index/TokenIndex"

    # Permisos para el bucket S3
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:PutObjectAcl
        - s3:DeleteObject
        - s3:ListBucket
        - s3:GetBucketLocation
        - s3:GetBucketPolicy
        - s3:GetObjectVersion
      Resource:
        # ARN del bucket dinámico (construido manualmente para funcionar con recursos existentes)
        - "arn:aws:s3:::emotioxv2-uploads-dev"
        # ARN para los objetos dentro del bucket
        - "arn:aws:s3:::emotioxv2-uploads-dev/*"

    # Permisos básicos para Logging en CloudWatch
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
      Resource:
        # ARN para los grupos de logs de las funciones de este stack
        - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${self:service}-${self:provider.stage}-*:*
