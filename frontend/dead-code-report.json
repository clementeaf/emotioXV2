{
  "files": [
    "api/apiRoutes.ts",
    "app/metadata.ts",
    "components/FileUploader/index.ts",
    "components/common/index.ts",
    "components/dashboard/index.ts",
    "components/debug/DeleteParticipantDebugger.tsx",
    "components/debug/WebSocketDebugger.tsx",
    "components/layout/index.ts",
    "components/research/CognitiveForm.tsx",
    "components/research/CognitiveTask/components/FileUploader.tsx",
    "components/research/CognitiveTask/components/HitZonePreview.tsx",
    "components/research/CognitiveTask/components/questions/SvgHitzoneEditor.tsx",
    "components/research/CognitiveTask/components/questions/index.ts",
    "components/research/CognitiveTask/constants/index.ts",
    "components/research/CognitiveTaskResults/OptimizedCognitiveResults.tsx",
    "components/research/CognitiveTaskResults/SummaryCards.tsx",
    "components/research/CognitiveTaskResults/TaskCard.tsx",
    "components/research/DemographicsForm.tsx",
    "components/research/EyeTracking/EyeTrackingRecruitForm.tsx",
    "components/research/EyeTracking/Recruit/components/ParticipantView.tsx",
    "components/research/EyeTracking/RecruitEyeTrackingForm.tsx",
    "components/research/EyeTracking/components/AuthModal.tsx",
    "components/research/EyeTracking/hooks/useEyeTrackingAreas.ts",
    "components/research/EyeTracking/hooks/useEyeTrackingFileUpload.ts",
    "components/research/EyeTracking/hooks/useEyeTrackingFormData.ts",
    "components/research/EyeTracking/tabs/AdvancedTab.tsx",
    "components/research/EyeTracking/tabs/PreviewTab.tsx",
    "components/research/EyeTracking/tabs/SetupTab.tsx",
    "components/research/EyeTracking/tabs/StimuliTab.tsx",
    "components/research/LinkSettingsForm.tsx",
    "components/research/ParticipantsForm.tsx",
    "components/research/ProgressMonitorForm.tsx",
    "components/research/QuestionConfig.tsx",
    "components/research/QuotasForm.tsx",
    "components/research/RecruitConfiguration.tsx",
    "components/research/ReorderableGrid.tsx",
    "components/research/ResearchTransition.tsx",
    "components/research/SimplifiedSmartVOCForm.tsx",
    "components/research/SmartVOC/components/SmartVOCForm.tsx",
    "components/research/SmartVOC/utils/validateRequiredField.ts",
    "components/research/SmartVOCDashboard.tsx",
    "components/research/SmartVOCEmotionalAnalysis.tsx",
    "components/research/SmartVOCForm.tsx",
    "components/research/SmartVOCNPSAnalysis.tsx",
    "components/research/SmartVOCResults/QuestionSelector.tsx",
    "components/research/SmartVOCResults/ui/Progress.tsx",
    "components/research/SmartVOCSentimentAnalysis.tsx",
    "components/research/SmartVOCTextAnalysis.tsx",
    "components/research/SmartVOCTrendAnalysis.tsx",
    "components/research/ThankYouScreenForm.tsx",
    "components/research/WelcomeScreen/components/ConfirmationModal.tsx",
    "components/research/WelcomeScreen/components/JsonPreviewModal.tsx",
    "components/research/WelcomeScreen/components/WelcomeScreenFields.tsx",
    "components/research/WelcomeScreen/components/WelcomeScreenToggle.tsx",
    "components/research/WelcomeScreen/types/index.ts",
    "components/research/WelcomeScreenForm.tsx",
    "components/research/index.ts",
    "components/research/modals/index.ts",
    "components/ui/LoadingSpinner.tsx",
    "components/ui/SidebarLink.tsx",
    "components/ui/SidebarSection.tsx",
    "components/ui/Spinner.tsx",
    "config/endpoints.ts",
    "contexts/AuthContext.tsx",
    "debug-auth.js",
    "hooks/useApiSimple.ts",
    "hooks/useCPVData.ts",
    "hooks/useDynamicWebSocket.ts",
    "hooks/useMonitoringWebSocket.ts",
    "hooks/useResearchData.ts",
    "hooks/useSmartVOCResponses.ts",
    "hooks/useTrustFlowData.ts",
    "hooks/useWebSocketUnified.ts",
    "lib/api-dedupe.ts",
    "lib/custom-hooks/useResearchIdValidation.ts",
    "lib/debug-api.ts",
    "pages/research/EyeTrackingFormPage.tsx",
    "providers/WebSocketProvider.tsx",
    "services/index.ts",
    "shared/api/eyeTracking.ts",
    "shared/interfaces/api.ts",
    "shared/interfaces/auth.interface.ts",
    "shared/interfaces/cognitive-task.interface.ts",
    "shared/interfaces/emotions.interface.ts",
    "shared/interfaces/participant.ts",
    "shared/interfaces/question-dictionary.interface.ts",
    "shared/interfaces/research-creation.interface.ts",
    "shared/interfaces/research-history.interface.ts",
    "shared/types/cognitive-task.types.ts",
    "shared/types/emotion.types.d.ts",
    "shared/types/smart-voc.types.ts",
    "shared/types/websocket.types.d.ts",
    "shared/types/websocket.types.ts",
    "shared/utils/index.ts",
    "types/@types/shared.d.ts",
    "types/auth.ts",
    "types/declarations.d.ts",
    "types/global.d.ts",
    "types/json.d.ts",
    "types/shared-types.ts",
    "utils/auth-helpers.ts",
    "utils/dateUtils.ts",
    "utils/debugging/index.ts",
    "utils/formHelpers.ts",
    "utils/handleApiError.ts",
    "utils/questionDictionaryBuilder.ts",
    "utils/websocket.ts"
  ],
  "components": [],
  "functions": [
    "api/apiRoutes.ts: apiRoutes",
    "api/apiRoutes.ts: ApiRoutes",
    "api/endpoints.js: PRODUCTION_URLS",
    "components/common/ConfigCard.tsx: ConfigCardProps",
    "components/debug/DeleteParticipantDebugger.tsx: DeleteParticipantDebugger",
    "components/debug/WebSocketDebugger.tsx: WebSocketDebugger",
    "components/research/CognitiveTask/components/HitZonePreview.tsx: HitZonePreview",
    "components/research/CognitiveTask/components/questions/SvgHitzoneEditor.tsx: SvgHitzoneEditor",
    "components/research/CognitiveTask/types.ts: DEFAULT_COGNITIVE_TASK_CONFIG",
    "components/research/CognitiveTaskFormHelpers.ts: cleanupErrorFiles",
    "components/research/CognitiveTaskFormHelpers.ts: cleanupPendingDeleteFiles",
    "components/research/CognitiveTaskFormHelpers.ts: revertPendingDeleteFiles",
    "components/research/CognitiveTaskFormHelpers.ts: mergeCognitiveTaskFormData",
    "components/research/CognitiveTaskFormHelpers.ts: saveCognitiveTask",
    "components/research/CognitiveTaskFormHelpers.ts: previewCognitiveTask",
    "components/research/CognitiveTaskResults/OptimizedCognitiveResults.tsx: OptimizedCognitiveResults",
    "components/research/CognitiveTaskResults/SummaryCards.tsx: SummaryCards",
    "components/research/CognitiveTaskResults/components/index.ts: type ChoiceOption",
    "components/research/CognitiveTaskResults/components/index.ts: type ChoiceQuestionData",
    "components/research/CognitiveTaskResults/components/index.ts: type RankingDistribution",
    "components/research/CognitiveTaskResults/components/index.ts: type RankingOption",
    "components/research/CognitiveTaskResults/components/index.ts: type RankingQuestionData",
    "components/research/CognitiveTaskResults/components/index.ts: type ImageSelectionData",
    "components/research/CognitiveTaskResults/components/index.ts: type LinearScaleData",
    "components/research/CognitiveTaskResults/components/index.ts: type PreferenceTestData",
    "components/research/CognitiveTaskResults/components/index.ts: type RatingData",
    "components/research/CognitiveTaskResults/types.ts: CognitiveSubtask",
    "components/research/CognitiveTaskResults/types.ts: ClusterGroup",
    "components/research/CognitiveTaskResults/types.ts: VisualizationData",
    "components/research/CognitiveTaskResults/types.ts: FilterOption",
    "components/research/CognitiveTaskResults/types.ts: CognitiveTaskResultsFilters",
    "components/research/CognitiveTaskResults/types.ts: CognitiveTaskResultsConfig",
    "components/research/CognitiveTaskResults/types.ts: EyeTrackingData",
    "components/research/CognitiveTaskResults/types.ts: SummaryMetrics",
    "components/research/CognitiveTaskResults/types.ts: VisualClickPoint",
    "components/research/CognitiveTaskResults/types.ts: ClickTrackingData",
    "components/research/DemographicsForm.tsx: DemographicsForm",
    "components/research/EyeTracking/EyeTrackingRecruitForm.tsx: EyeTrackingRecruitForm",
    "components/research/EyeTracking/Recruit/components/ParticipantView.tsx: ParticipantView",
    "components/research/EyeTracking/components/AuthModal.tsx: AuthModal",
    "components/research/EyeTracking/hooks/useEyeTrackingAreas.ts: useEyeTrackingAreas",
    "components/research/EyeTracking/hooks/useEyeTrackingFileUpload.ts: useEyeTrackingFileUpload",
    "components/research/EyeTracking/hooks/useEyeTrackingForm.ts: UseEyeTrackingFormProps",
    "components/research/EyeTracking/hooks/useEyeTrackingForm.ts: UseEyeTrackingFormReturn",
    "components/research/EyeTracking/hooks/useEyeTrackingForm.ts: useEyeTrackingAuth",
    "components/research/EyeTracking/hooks/useEyeTrackingFormData.ts: useEyeTrackingFormData",
    "components/research/EyeTracking/tabs/AdvancedTab.tsx: AdvancedTab",
    "components/research/EyeTracking/tabs/PreviewTab.tsx: PreviewTab",
    "components/research/EyeTracking/tabs/SetupTab.tsx: SetupTab",
    "components/research/LinkSettingsForm.tsx: LinkSettingsForm",
    "components/research/ParticipantsForm.tsx: ParticipantsForm",
    "components/research/ProgressMonitorForm.tsx: ProgressMonitorForm",
    "components/research/QuotasForm.tsx: QuotasForm",
    "components/research/RecruitConfiguration.tsx: RecruitConfiguration",
    "components/research/ReorderableGrid.tsx: ReorderableGrid",
    "components/research/ResearchTransition.tsx: ResearchTransition",
    "components/research/SimplifiedSmartVOCForm.tsx: SimplifiedSmartVOCForm",
    "components/research/SmartVOC/constants/emotionHierarchy.ts: EmotionOption",
    "components/research/SmartVOC/constants/emotionHierarchy.ts: ALL_EMOTIONS",
    "components/research/SmartVOC/constants/emotionHierarchy.ts: getEmotionsByCluster",
    "components/research/SmartVOC/constants/emotionHierarchy.ts: getClusterById",
    "components/research/SmartVOC/constants/emotionHierarchy.ts: getEmotionById",
    "components/research/SmartVOC/types/index.ts: DisplayType",
    "components/research/SmartVOC/types/index.ts: ScaleRange",
    "components/research/SmartVOC/types/index.ts: DEFAULT_SMART_VOC_CONFIG",
    "components/research/SmartVOC/types/index.ts: SmartVOCResponse",
    "components/research/SmartVOC/types/index.ts: UseSmartVOCFormResult",
    "components/research/SmartVOCDashboard.tsx: SmartVOCDashboard",
    "components/research/SmartVOCEmotionalAnalysis.tsx: SmartVOCEmotionalAnalysis",
    "components/research/SmartVOCNPSAnalysis.tsx: SmartVOCNPSAnalysis",
    "components/research/SmartVOCResults/types.ts: QuestionResult",
    "components/research/SmartVOCResults/types.ts: EmotionalStatesData",
    "components/research/SmartVOCSentimentAnalysis.tsx: SmartVOCSentimentAnalysis",
    "components/research/SmartVOCTextAnalysis.tsx: SmartVOCTextAnalysis",
    "components/research/SmartVOCTrendAnalysis.tsx: SmartVOCTrendAnalysis",
    "components/research/ThankYouScreen/types/index.ts: type ThankYouScreenConfig",
    "components/research/ThankYouScreen/types/index.ts: type ThankYouScreenResponse",
    "components/research/WelcomeScreen/components/WelcomeScreenFields.tsx: WelcomeScreenFields",
    "components/research/WelcomeScreen/components/WelcomeScreenToggle.tsx: WelcomeScreenToggle",
    "components/research/WelcomeScreen/types/index.ts: WelcomeScreenResponse",
    "components/ui/Alert.tsx: AlertTitle",
    "components/ui/Badge.tsx: BadgeProps",
    "components/ui/Button.tsx: ButtonProps",
    "components/ui/Button.tsx: buttonVariants",
    "components/ui/Card.tsx: CardFooter",
    "components/ui/Dialog.tsx: DialogTrigger",
    "components/ui/FormFooter.tsx: FormFooterProps",
    "components/ui/Input.tsx: InputProps",
    "components/ui/LoadingSpinner.tsx: LoadingSpinnerProps",
    "components/ui/LoadingSpinner.tsx: LoadingSpinner",
    "components/ui/LoadingSpinner.tsx: SimpleSpinner",
    "components/ui/LoadingSpinner.tsx: ButtonSpinner",
    "components/ui/LoadingSpinner.tsx: LoadingSpinner",
    "components/ui/SidebarLink.tsx: SidebarLink",
    "components/ui/SidebarSection.tsx: SidebarSection",
    "components/ui/Spinner.tsx: Spinner",
    "components/ui/StatusBadge.tsx: StatusType",
    "components/ui/Textarea.tsx: TextareaProps",
    "config/api.ts: WS_BASE_URL",
    "config/api.ts: SECURE_API_BASE_URL",
    "config/api.ts: ApiCategory",
    "config/api.ts: ApiOperation",
    "config/api.ts: validateApiConfiguration",
    "config/endpoints.ts: EndpointConfig",
    "config/endpoints.ts: getEndpointConfig",
    "config/endpoints.ts: validateEndpointConfig",
    "config/endpoints.ts: getWebSocketUrl",
    "hooks/useApiSimple.ts: useApiSimple",
    "hooks/useApiSimple.ts: useApiSimple",
    "hooks/useCPVData.ts: useCPVData",
    "hooks/useCognitiveTaskResults.ts: ProcessedCognitiveData",
    "hooks/useDynamicWebSocket.ts: useDynamicWebSocket",
    "hooks/useMonitoringWebSocket.ts: useMonitoringWebSocket",
    "hooks/useNavigationFlowConfig.ts: NavigationFlowConfig",
    "hooks/useOptimizedCognitiveResults.ts: ProcessedLinearScaleData",
    "hooks/useOptimizedCognitiveResults.ts: ProcessedRankingData",
    "hooks/useOptimizedCognitiveResults.ts: ProcessedChoiceData",
    "hooks/useOptimizedCognitiveResults.ts: ProcessedSentimentData",
    "hooks/useResearchData.ts: useResearchData",
    "hooks/useSmartVOCResponses.ts: useSmartVOCResponses",
    "hooks/useTrustFlowData.ts: useTrustFlowData",
    "hooks/useWebSocketUnified.ts: useWebSocketUnified",
    "hooks/useWebSocketUnified.ts: useWebSocketUnified",
    "interfaces/research.ts: ResearchProject",
    "interfaces/research.ts: ResearchViewProps",
    "lib/api-dedupe.ts: apiDeduplicator",
    "lib/api.ts: smartVocAPI",
    "lib/api.ts: s3API",
    "lib/api.ts: participantsAPI",
    "lib/custom-hooks/useResearchIdValidation.ts: useResearchIdValidation",
    "lib/custom-hooks/useResearchIdValidation.ts: useResearchIdValidation",
    "lib/debug-api.ts: isLocalDevelopment",
    "lib/debug-api.ts: getDevToken",
    "lib/debug-api.ts: createResearch",
    "lib/utils.ts: isDevelopmentMode",
    "lib/utils.ts: shouldUseSimulatedMode",
    "lib/utils.ts: sleep",
    "lib/utils.ts: getTimeAgo",
    "providers/WebSocketProvider.tsx: WebSocketProvider",
    "routes.ts: RESEARCH_ROUTES",
    "routes.ts: WELCOME_SCREEN_ROUTES",
    "routes.ts: THANK_YOU_SCREEN_ROUTES",
    "routes.ts: COGNITIVE_TASK_ROUTES",
    "routes.ts: EYE_TRACKING_ROUTES",
    "routes.ts: PARTICIPANT_ROUTES",
    "routes.ts: SMART_VOC_ROUTES",
    "routes.ts: API_ROUTES",
    "routes.ts: getRoute",
    "services/authService.ts: RegisterData",
    "services/authService.ts: LoginData",
    "services/eyeTrackingService.ts: EyeTrackingRecord",
    "services/moduleResponseService.ts: ModuleResponseService",
    "services/researchService.ts: CreateResearchData",
    "services/s3Service.ts: FileType",
    "services/s3Service.ts: PresignedUrlResponse",
    "services/s3Service.ts: DownloadUrlResponse",
    "services/s3Service.ts: DeleteUrlResponse",
    "shared/interfaces/auth.interface.ts: AuthStep",
    "shared/interfaces/cognitive-task.interface.ts: COGNITIVE_TASK_VALIDATION",
    "shared/interfaces/dashboard.interface.ts: DashboardConfig",
    "shared/interfaces/dashboard.interface.ts: DashboardShellProps",
    "shared/interfaces/dashboard.interface.ts: DashboardLayoutProps",
    "shared/interfaces/emotions.interface.ts: EmotionData",
    "shared/interfaces/emotions.interface.ts: AnalysisItem",
    "shared/interfaces/emotions.interface.ts: BulletItem",
    "shared/interfaces/emotions.interface.ts: EmotionsDashboardConfig",
    "shared/interfaces/emotions.interface.ts: EmotionBarProps",
    "shared/interfaces/emotions.interface.ts: AnalysisItemProps",
    "shared/interfaces/emotions.interface.ts: BulletPointProps",
    "shared/interfaces/eyeTracking.ts: EyeTrackingRecruitResponse",
    "shared/interfaces/eyeTracking.ts: LinkResponse",
    "shared/interfaces/eyeTracking.ts: QRResponse",
    "shared/interfaces/eyeTracking.ts: DemographicQuestionKey",
    "shared/interfaces/eyeTracking.ts: LinkConfigKey",
    "shared/interfaces/eyeTracking.ts: ParameterOptionKey",
    "shared/interfaces/eyeTracking.ts: BacklinkKey",
    "shared/interfaces/eyeTrackingRecruit.interface.ts: DemographicQuestions",
    "shared/interfaces/eyeTrackingRecruit.interface.ts: ParticipantLimit",
    "shared/interfaces/eyeTrackingRecruit.interface.ts: ParameterOptions",
    "shared/interfaces/eyeTrackingRecruit.interface.ts: StatisticItem",
    "shared/interfaces/module-response.interface.ts: ModuleResponseValue",
    "shared/interfaces/module-response.interface.ts: ModuleResponse",
    "shared/interfaces/question-dictionary.interface.ts: QuestionModule",
    "shared/interfaces/question-dictionary.interface.ts: QuestionDictionaryEntry",
    "shared/interfaces/research-creation.interface.ts: ResearchCreationStep",
    "shared/interfaces/research-creation.interface.ts: ResearchCreationConfig",
    "shared/interfaces/research-history.interface.ts: ResearchHistoryParams",
    "shared/interfaces/research.interface.ts: DEFAULT_RESEARCH_VALIDATION",
    "shared/interfaces/research.model.ts: ResearchTechnique",
    "shared/interfaces/research.model.ts: AIMFrameworkConfig",
    "shared/interfaces/research.model.ts: BiometricConfig",
    "shared/interfaces/research.model.ts: CreateResearchRequest",
    "shared/interfaces/research.model.ts: CreateResearchResponse",
    "shared/interfaces/research.model.ts: CreateResearchError",
    "shared/interfaces/research.model.ts: generateResearchId",
    "shared/interfaces/research.model.ts: isAIMFrameworkResearch",
    "shared/interfaces/research.model.ts: isAIMFrameworkConfig",
    "types/auth.ts: RequestOTPPayload",
    "types/auth.ts: ValidateOTPPayload",
    "types/index.ts: // Exportamos los tipos como parte del namespace\n  type TrackingDeviceType",
    "types/shared-types.ts: WebSocketConnection",
    "types/shared-types.ts: AuthUser",
    "types/shared-types.ts: AuthToken",
    "utils/auth-helpers.ts: hasStoredToken",
    "utils/auth-helpers.ts: hasAuthSync",
    "utils/auth-helpers.ts: createActionButton",
    "utils/auth-helpers.ts: showAuthDiagnostics",
    "utils/dateUtils.ts: getRelativeTime",
    "utils/debug-env.ts: getWebSocketUrlForMonitoring",
    "utils/debugging/apiDebugger.ts: debugFetch",
    "utils/formHelpers.ts: ButtonTextOptions",
    "utils/formHelpers.ts: getStandardButtonText",
    "utils/formHelpers.ts: getButtonDisabledState",
    "utils/formHelpers.ts: getErrorDisplayProps",
    "utils/formHelpers.ts: getFormContainerClass",
    "utils/formHelpers.ts: formSpacing",
    "utils/formHelpers.ts: getProgressPercentage",
    "utils/formHelpers.ts: getScaleButtonClass",
    "utils/formHelpers.ts: formatQuestionText",
    "utils/handleApiError.ts: handleApiError",
    "utils/questionDictionaryBuilder.ts: buildGlobalQuestionDictionary",
    "utils/test-grouped-endpoint.ts: TestResult",
    "utils/test-grouped-endpoint.ts: generateTestReport",
    "utils/websocket.ts: ConnectionStatus"
  ],
  "variables": [
    "components/dashboard/ResearchTable.tsx: handleViewResearch",
    "components/research/CognitiveTask/components/JsonPreviewModal.tsx: navButtonsRef",
    "components/research/CognitiveTask/components/JsonPreviewModal.tsx: handleContinue",
    "components/research/CognitiveTask/components/NavigationFlowPreview.tsx: getImageDrawRect",
    "components/research/CognitiveTask/components/NavigationFlowPreview.tsx: handleHitzoneClick",
    "components/research/CognitiveTask/components/questions/LocalHitzoneEditor.tsx: CANVAS_SIZE",
    "components/research/CognitiveTask/components/questions/SvgHitzoneEditor.tsx: handleMouseUp",
    "components/research/CognitiveTask/components/questions/SvgHitzoneEditor.tsx: handleRectDrag",
    "components/research/CognitiveTask/hooks/useCognitiveTaskFileUpload.ts: cleanFileName",
    "components/research/CognitiveTask/hooks/useCognitiveTaskForm.ts: filesWithHitZones",
    "components/research/CognitiveTask/index.tsx: FileItem",
    "components/research/CognitiveTaskResults/components/NavigationFlowResults.tsx: handleImageSelect",
    "components/research/CognitiveTaskResults/components/NavigationFlowResults.tsx: currentImageClickPoints",
    "components/research/CognitiveTaskResults/components/NavigationFlowResults.tsx: selectedImage",
    "components/research/EyeTracking/EyeTrackingForm.tsx: handleTabCompletion",
    "components/research/EyeTracking/Recruit/RecruitEyeTrackingForm.tsx: handleAgeConfigClick",
    "components/research/EyeTracking/Recruit/components/ErrorModal.tsx: colorClasses",
    "components/research/EyeTracking/Recruit/hooks/useEyeTrackingRecruit.ts: logger",
    "components/research/EyeTracking/Recruit/hooks/useEyeTrackingRecruit.ts: qrCodeSvg",
    "components/research/SmartVOCResults/QuestionSelector.tsx: getQuestionTitle",
    "components/research/SmartVOCResults/QuestionSelector.tsx: getQuestionType",
    "components/research/SmartVOCResults/QuestionSelector.tsx: getQuestionData",
    "components/research/SmartVOCResults/index.tsx: cvValue",
    "components/research/ThankYouScreen/components/ErrorModal.tsx: colorClasses",
    "components/research/WelcomeScreen/components/ErrorModal.tsx: colorClasses",
    "hooks/useApi.ts: isProxyUrl",
    "pages/research/EyeTrackingFormPage.tsx: handleSave"
  ],
  "types": [
    "api/apiRoutes.ts: ApiRoutes",
    "components/research/CognitiveTask/hooks/useCognitiveTaskForm.ts: ExtendedUploadedFile",
    "components/research/CognitiveTask/types.ts: enriquecido",
    "components/research/CognitiveTaskResults/types.ts: VisualizationData",
    "components/research/CognitiveTaskResults/types.ts: CognitiveTaskResultsFilters",
    "components/research/CognitiveTaskResults/types.ts: CognitiveTaskResultsConfig",
    "components/research/CognitiveTaskResults/types.ts: EyeTrackingData",
    "components/research/CognitiveTaskResults/types.ts: SummaryMetrics",
    "components/research/EyeTracking/hooks/useEyeTrackingFormData.ts: ExtendedEyeTrackingStimulus",
    "components/research/EyeTracking/hooks/useEyeTrackingFormData.ts: UploadResult",
    "components/research/SmartVOC/components/SmartVOCQuestions.tsx: changed",
    "components/research/SmartVOC/types/index.ts: SmartVOCResponse",
    "components/research/SmartVOC/types/index.ts: UseSmartVOCFormResult",
    "components/research/SmartVOCDashboard.tsx: KPICard",
    "components/research/SmartVOCDashboard.tsx: MetricSection",
    "components/research/SmartVOCEmotionalAnalysis.tsx: EmotionValue",
    "components/research/SmartVOCEmotionalAnalysis.tsx: ClusterData",
    "components/research/SmartVOCNPSAnalysis.tsx: MonthlyData",
    "components/research/SmartVOCNPSAnalysis.tsx: LoyaltyEvolution",
    "components/research/SmartVOCResults/types.ts: QuestionResult",
    "components/research/SmartVOCResults/types.ts: EmotionalStatesData",
    "components/research/SmartVOCTrendAnalysis.tsx: MetricData",
    "components/research/SmartVOCTrendAnalysis.tsx: TrendSeries",
    "components/research/WelcomeScreen/types/index.ts: WelcomeScreenResponse",
    "config/api.ts: ApiOperation",
    "interfaces/research.ts: ResearchProject",
    "interfaces/research.ts: ResearchViewProps",
    "services/s3Service.ts: DownloadUrlResponse",
    "services/s3Service.ts: DeleteUrlResponse",
    "shared/interfaces/auth.interface.ts: AuthStep",
    "shared/interfaces/dashboard.interface.ts: DashboardConfig",
    "shared/interfaces/dashboard.interface.ts: DashboardShellProps",
    "shared/interfaces/dashboard.interface.ts: DashboardLayoutProps",
    "shared/interfaces/emotions.interface.ts: EmotionsDashboardConfig",
    "shared/interfaces/emotions.interface.ts: EmotionBarProps",
    "shared/interfaces/emotions.interface.ts: AnalysisItemProps",
    "shared/interfaces/emotions.interface.ts: BulletPointProps",
    "shared/interfaces/eyeTracking.ts: EyeTrackingRecruitResponse",
    "shared/interfaces/eyeTracking.ts: LinkResponse",
    "shared/interfaces/eyeTracking.ts: QRResponse",
    "shared/interfaces/eyeTracking.ts: DemographicQuestionKey",
    "shared/interfaces/eyeTracking.ts: LinkConfigKey",
    "shared/interfaces/eyeTracking.ts: ParameterOptionKey",
    "shared/interfaces/eyeTracking.ts: BacklinkKey",
    "shared/interfaces/research-creation.interface.ts: ResearchCreationConfig",
    "shared/interfaces/research-history.interface.ts: ResearchHistoryParams",
    "shared/interfaces/research.model.ts: CreateResearchRequest",
    "shared/interfaces/research.model.ts: CreateResearchResponse",
    "shared/interfaces/research.model.ts: CreateResearchError",
    "types/auth.ts: RequestOTPPayload",
    "types/auth.ts: ValidateOTPPayload",
    "types/shared-types.ts: WebSocketConnection",
    "types/shared-types.ts: AuthUser",
    "types/shared-types.ts: AuthToken"
  ],
  "imports": [
    "app/dashboard/research/new/page.tsx: withSearchParams",
    "app/dashboard/research/new/page.tsx: NewResearchContent",
    "app/dashboard/research/page.tsx: ResearchList",
    "app/dashboard/research-history/page.tsx: withSearchParams",
    "app/dashboard/research-history/page.tsx: ResearchHistoryContent",
    "components/auth/AuthDebugger.tsx: useAuthDebugger",
    "components/auth/LoginForm.tsx: useLoginForm",
    "components/auth/RegisterForm.tsx: useRegisterForm",
    "components/clients/BenchmarkChart.tsx: cn",
    "components/clients/ClientsContent.tsx: type BestResearchData",
    "components/clients/ClientsResearchList.tsx: ResearchListProps",
    "components/clients/ClientsResearchList.tsx: cn",
    "components/common/ConfigCard.tsx: cn",
    "components/dashboard/DashboardLayout.tsx: useQueryParams",
    "components/dashboard/DashboardStats.tsx: DashboardStatsProps",
    "components/dashboard/ResearchTypes.tsx: useResearchList",
    "components/layout/ResearchSidebar.tsx: ResearchSection",
    "components/research/CognitiveTask/components/CognitiveTaskSettings.tsx: CognitiveTaskFieldsProps",
    "components/research/CognitiveTask/components/ErrorModal.tsx: ErrorModalData",
    "components/research/CognitiveTask/components/questions/TextQuestion.tsx: TextQuestionProps",
    "components/research/CognitiveTask/components/questions/TextQuestion.tsx: UI_TEXTS",
    "components/research/CognitiveTask/hooks/useCognitiveTaskForm.ts: DEFAULT_STATE",
    "components/research/CognitiveTask/index.tsx: CognitiveTaskFormProps",
    "components/research/CognitiveTaskResults/TaskCard.tsx: CognitiveTaskResult",
    "components/research/CognitiveTaskResults/TaskCard.tsx: ScatterDataPoint",
    "components/research/CognitiveTaskResults/components/HeaderSection.tsx: cn",
    "components/research/CognitiveTaskResults/components/MainContent.tsx: CognitiveTaskQuestion",
    "components/research/CognitiveTaskResults/components/MetricCard.tsx: SummaryMetric",
    "components/research/CognitiveTaskResults/components/SentimentAnalysisPanel.tsx: SentimentAnalysis",
    "components/research/CognitiveTaskResults/components/TaskCard.tsx: CognitiveTaskResult",
    "components/research/CognitiveTaskResults/components/ThemesPanel.tsx: ThemeResult",
    "components/research/EyeTracking/Recruit/components/ErrorModal.tsx: ErrorModalProps",
    "components/research/EyeTracking/hooks/useEyeTrackingFileUpload.ts: useErrorLog",
    "components/research/EyeTracking/hooks/useEyeTrackingFileUpload.ts: useFileUpload",
    "components/research/ParticipantGenerator.tsx: apiClient",
    "components/research/ParticipantGenerator.tsx: setupAuthToken",
    "components/research/SmartVOC/components/EmotionHierarchySelector.tsx: EmotionCluster",
    "components/research/SmartVOC/components/SmartVOCQuestions.tsx: SmartVOCQuestionsProps",
    "components/research/SmartVOC/components/SmartVOCSettings.tsx: SmartVOCSettingsProps",
    "components/research/SmartVOC/hooks/useSmartVOCForm.ts: useAuth",
    "components/research/SmartVOC/hooks/useSmartVOCForm.ts: useSmartVOCMutations",
    "components/research/SmartVOC/hooks/useSmartVOCForm.ts: useSmartVOCValidation",
    "components/research/SmartVOC/hooks/useSmartVOCMutations.ts: useAuth",
    "components/research/SmartVOC/hooks/useSmartVOCMutations.ts: ErrorModalData",
    "components/research/SmartVOC/index.tsx: SmartVOCFormProps",
    "components/research/SmartVOC/utils.ts: SmartVOCQuestion",
    "components/research/ThankYouScreen/components/ErrorModal.tsx: ErrorModalProps",
    "components/research/ThankYouScreen/components/ThankYouScreenContent.tsx: ThankYouScreenContentProps",
    "components/research/WelcomeScreen/components/ConfirmationModal.tsx: WelcomeScreenFormData",
    "components/research/WelcomeScreen/components/ErrorModal.tsx: ErrorModalProps",
    "components/research/WelcomeScreen/components/WelcomeScreenContent.tsx: ValidationErrors",
    "components/research/WelcomeScreen/components/WelcomeScreenFields.tsx: WelcomeScreenFormData",
    "components/research/WelcomeScreen/components/WelcomeScreenFields.tsx: ValidationErrors",
    "components/research/WelcomeScreen/components/WelcomeScreenFooter.tsx: WelcomeScreenFormProps",
    "components/research/WelcomeScreen/types.ts: WelcomeScreenFormData",
    "components/research/modals/ConfirmationModal.tsx: ConfirmationModalProps",
    "components/research/modals/DraftContinuationModal.tsx: ConfirmationModalProps",
    "components/research/sections/CreateSection.tsx: CreateSectionProps",
    "components/research/sections/StagesSection.tsx: StagesSectionProps",
    "components/research/sections/SuccessSection.tsx: SuccessSectionProps",
    "components/ui/Label.tsx: cn",
    "components/ui/SidebarSection.tsx: cn",
    "config/api.ts: DYNAMIC_API_ENDPOINTS",
    "config/api.ts: isEndpointsSynced",
    "hooks/useApi.ts: useAuth",
    "hooks/useApiSimple.ts: useAuth",
    "hooks/useAuthDebugger.ts: useAuth",
    "hooks/useDynamicWebSocket.ts: useAuth",
    "hooks/useFileUpload.ts: FileUploadParams",
    "hooks/useMonitoringReceiver.ts: useAuth",
    "hooks/useProtectedRoute.ts: useAuth",
    "hooks/useWebSocketConnection.ts: getWebsocketUrl",
    "hooks/useWebSocketUnified.ts: useAuth",
    "hooks/useWelcomeScreenData.ts: WelcomeScreenRecord",
    "providers/ResearchProvider.tsx: ResearchContextType"
  ]
}