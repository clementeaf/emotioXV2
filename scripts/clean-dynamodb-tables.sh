#!/bin/bash

# üßπ SCRIPT PARA LIMPIAR TABLAS DYNAMODB
# Elimina todo el contenido de las tablas participants y module-responses

set -e  # Salir si hay alg√∫n error

# Configuraci√≥n
REGION="us-east-1"
PARTICIPANTS_TABLE="emotioxv2-backend-participants-dev"
MODULE_RESPONSES_TABLE="emotioxv2-backend-module-responses-dev"

echo "üßπ LIMPIANDO TABLAS DYNAMODB"
echo "============================="
echo ""
echo "üìã Tablas a limpiar:"
echo "  - Participants: $PARTICIPANTS_TABLE"
echo "  - Module Responses: $MODULE_RESPONSES_TABLE"
echo "  - Regi√≥n: $REGION"
echo ""

# Funci√≥n para limpiar una tabla
clean_table() {
    local table_name=$1
    local table_display_name=$2

    echo "üßπ Limpiando tabla: $table_display_name"
    echo "----------------------------------------"

    # Verificar que la tabla existe
    if ! aws dynamodb describe-table --table-name "$table_name" --region "$REGION" >/dev/null 2>&1; then
        echo "‚ùå Error: La tabla $table_name no existe"
        return 1
    fi

    # Contar registros antes de eliminar
    echo "üìä Contando registros existentes..."
    local count_before=$(aws dynamodb scan --table-name "$table_name" --region "$REGION" --select COUNT --query 'Count' --output text)
    echo "   Registros encontrados: $count_before"

    if [ "$count_before" -eq 0 ]; then
        echo "‚úÖ La tabla $table_display_name ya est√° vac√≠a"
        return 0
    fi

    # Escanear y eliminar todos los registros
    echo "üóëÔ∏è  Eliminando registros..."
    local deleted_count=0

    # Procesar en lotes para evitar l√≠mites de AWS CLI
    while true; do
        # Obtener un lote de registros
        local scan_result=$(aws dynamodb scan \
            --table-name "$table_name" \
            --region "$REGION" \
            --max-items 25 \
            --query 'Items[].id.S' \
            --output text)

        if [ -z "$scan_result" ] || [ "$scan_result" = "None" ]; then
            break
        fi

        # Eliminar cada registro del lote
        for id in $scan_result; do
            if [ "$id" != "None" ] && [ -n "$id" ]; then
                aws dynamodb delete-item \
                    --table-name "$table_name" \
                    --region "$REGION" \
                    --key "{\"id\":{\"S\":\"$id\"}}" \
                    --output text >/dev/null 2>&1

                deleted_count=$((deleted_count + 1))
                echo -n "."
            fi
        done
    done

    echo ""
    echo "‚úÖ Eliminados $deleted_count registros de $table_display_name"

    # Verificar que la tabla est√° vac√≠a
    local count_after=$(aws dynamodb scan --table-name "$table_name" --region "$REGION" --select COUNT --query 'Count' --output text)
    echo "üìä Registros restantes: $count_after"

    if [ "$count_after" -eq 0 ]; then
        echo "‚úÖ Tabla $table_display_name limpiada completamente"
    else
        echo "‚ö†Ô∏è  A√∫n quedan $count_after registros en $table_display_name"
    fi

    echo ""
}

# Confirmar antes de proceder
echo "‚ö†Ô∏è  ADVERTENCIA: Esta operaci√≥n eliminar√° TODOS los datos de las tablas."
echo "   Esta acci√≥n NO se puede deshacer."
echo ""
read -p "¬øEst√°s seguro de que quieres continuar? (y/N): " -n 1 -r
echo ""

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Operaci√≥n cancelada"
    exit 1
fi

echo "üöÄ Iniciando limpieza..."
echo ""

# Limpiar tabla de participantes
clean_table "$PARTICIPANTS_TABLE" "Participants"

# Limpiar tabla de module-responses
clean_table "$MODULE_RESPONSES_TABLE" "Module Responses"

echo "üéâ LIMPIEZA COMPLETADA"
echo "====================="
echo ""
echo "‚úÖ Ambas tablas han sido limpiadas completamente"
echo ""
echo "üìã Resumen:"
echo "  - Tabla Participants: $PARTICIPANTS_TABLE"
echo "  - Tabla Module Responses: $MODULE_RESPONSES_TABLE"
echo "  - Regi√≥n: $REGION"
echo ""
echo "üîç Para verificar, puedes ejecutar:"
echo "  aws dynamodb scan --table-name $PARTICIPANTS_TABLE --region $REGION --select COUNT"
echo "  aws dynamodb scan --table-name $MODULE_RESPONSES_TABLE --region $REGION --select COUNT"
